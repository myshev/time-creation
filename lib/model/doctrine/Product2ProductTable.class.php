<?php

/**
 * Product2ProductTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Product2ProductTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object Product2ProductTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Product2Product');
    }

	public function getLinkedProducts($productId) {
		if((int) $productId) {
			$choices = array();

			$oResult1 = $this->createQuery('p2p')
				->andWhere('p2p.product_id 			= ? ', $productId)
				->andWhere('p2p.parent_product_id 	<> ? ', $productId)
				->execute();

			$oResult2 = $this->createQuery('p2p')
				->andWhere('p2p.parent_product_id = ?', $productId)
				->andWhere('p2p.product_id <> ?', $productId)
				->execute();

			if($oResult1->count()) {
				foreach($oResult1 as $item) {
					$choices[] = $item->getParentProductId();
				}
			}

			if($oResult2->count()) {
				foreach($oResult2 as $item) {
					$choices[] = $item->getProductId();
				}
			}

			return array_unique($choices);
		}
		return false;
	}

	public function getLinkedProductsRecords($iProduct) {
		$oQuery = $this->createQuery('p2p')
			->select()
			->andWhere('p2p.product_id = ?', $iProduct)
			->orWhere('p2p.parent_product_id = ?', $iProduct);
		return $oQuery->execute();
	}
}