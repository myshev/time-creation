<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('StatPage', 'doctrine');

/**
 * BaseStatPage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $alias
 * @property clob $description
 * @property string $image
 * 
 * @method string   getName()        Returns the current record's "name" value
 * @method string   getAlias()       Returns the current record's "alias" value
 * @method clob     getDescription() Returns the current record's "description" value
 * @method string   getImage()       Returns the current record's "image" value
 * @method StatPage setName()        Sets the current record's "name" value
 * @method StatPage setAlias()       Sets the current record's "alias" value
 * @method StatPage setDescription() Sets the current record's "description" value
 * @method StatPage setImage()       Sets the current record's "image" value
 * 
 * @package    manymoney
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStatPage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('stat_page');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'Заголовок страницы',
             'length' => 255,
             ));
        $this->hasColumn('alias', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'comment' => 'Символьное имя страницы',
             'length' => 100,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             'comment' => 'Текст страницы',
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'comment' => 'Изображение',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}